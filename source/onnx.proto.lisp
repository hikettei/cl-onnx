;;; onnx.proto.lisp
;;;
;;; Generated by the protocol buffer compiler. DO NOT EDIT!

(cl:in-package #:common-lisp-user)

#+sbcl
(cl:progn
 (cl:eval-when (:compile-toplevel) (sb-ext:restrict-compiler-policy 'cl:debug 0 1))
 (cl:declaim (cl:optimize (sb-c:store-coverage-data 0))))

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
  (cl:unless (cl:find-package "CL-PROTOBUFS.ONNX")
    (cl:defpackage "CL-PROTOBUFS.ONNX" (:use)
                   (:local-nicknames (#:pi #:cl-protobufs.implementation)))))

(cl:in-package "CL-PROTOBUFS.ONNX")

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
(pi:define-schema 'onnx
    :package "onnx")
)


;;; Top-Level enums

(pi:define-enum version
    ()
  (:-start-version :index 0)
  (:ir-version-2017-10-10 :index 1)
  (:ir-version-2017-10-30 :index 2)
  (:ir-version-2017-11-3 :index 3)
  (:ir-version-2019-1-22 :index 4)
  (:ir-version-2019-3-18 :index 5)
  (:ir-version-2019-9-19 :index 6)
  (:ir-version-2020-5-8 :index 7)
  (:ir-version-2021-7-30 :index 8)
  (:ir-version-2023-5-5 :index 9)
  (:ir-version :index 10))

(pi:define-enum operator-status
    ()
  (:experimental :index 0)
  (:stable :index 1))

;;; Top-Level messages

(pi:define-message attribute-proto
    ()
  ;; Nested enums

  (pi:define-enum attribute-proto.attribute-type
      ()
    (:undefined :index 0)
    (:float :index 1)
    (:int :index 2)
    (:string :index 3)
    (:tensor :index 4)
    (:graph :index 5)
    (:sparse-tensor :index 11)
    (:type-proto :index 13)
    (:floats :index 6)
    (:ints :index 7)
    (:strings :index 8)
    (:tensors :index 9)
    (:graphs :index 10)
    (:sparse-tensors :index 12)
    (:type-protos :index 14))
  ;; Fields
  (name
   :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "name")
  (ref-attr-name
   :index 21 :type cl:string :kind :scalar :label (:optional) :json-name "refAttrName")
  (doc-string
   :index 13 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (type
   :index 20 :type attribute-proto.attribute-type :kind :enum :label (:optional) :json-name "type" :default :undefined)
  (f
   :index 2 :type cl:float :kind :scalar :label (:optional) :json-name "f")
  (i
   :index 3 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "i")
  (s
   :index 4 :type cl-protobufs:byte-vector :kind :scalar :label (:optional) :json-name "s")
  (t
   :index 5 :type tensor-proto :kind :message :label (:optional) :json-name "t")
  (g
   :index 6 :type graph-proto :kind :message :label (:optional) :json-name "g")
  (sparse-tensor
   :index 22 :type sparse-tensor-proto :kind :message :label (:optional) :json-name "sparseTensor")
  (tp
   :index 14 :type type-proto :kind :message :label (:optional) :json-name "tp")
  (floats
   :index 7 :type cl:float :kind :scalar :label (:repeated :list) :json-name "floats")
  (ints
   :index 8 :type cl-protobufs:int64 :kind :scalar :label (:repeated :list) :json-name "ints")
  (strings
   :index 9 :type cl-protobufs:byte-vector :kind :scalar :label (:repeated :list) :json-name "strings")
  (tensors
   :index 10 :type tensor-proto :kind :message :label (:repeated :list) :json-name "tensors")
  (graphs
   :index 11 :type graph-proto :kind :message :label (:repeated :list) :json-name "graphs")
  (sparse-tensors
   :index 23 :type sparse-tensor-proto :kind :message :label (:repeated :list) :json-name "sparseTensors")
  (type-protos
   :index 15 :type type-proto :kind :message :label (:repeated :list) :json-name "typeProtos"))

(pi:define-message value-info-proto
    ()
  ;; Fields
  (name
   :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "name")
  (type
   :index 2 :type type-proto :kind :message :label (:optional) :json-name "type")
  (doc-string
   :index 3 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (metadata-props
   :index 4 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "metadataProps"))

(pi:define-message node-proto
    ()
  ;; Fields
  (input
   :index 1 :type cl:string :kind :scalar :label (:repeated :list) :json-name "input")
  (output
   :index 2 :type cl:string :kind :scalar :label (:repeated :list) :json-name "output")
  (name
   :index 3 :type cl:string :kind :scalar :label (:optional) :json-name "name")
  (op-type
   :index 4 :type cl:string :kind :scalar :label (:optional) :json-name "opType")
  (domain
   :index 7 :type cl:string :kind :scalar :label (:optional) :json-name "domain")
  (overload
   :index 8 :type cl:string :kind :scalar :label (:optional) :json-name "overload")
  (attribute
   :index 5 :type attribute-proto :kind :message :label (:repeated :list) :json-name "attribute")
  (doc-string
   :index 6 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (metadata-props
   :index 9 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "metadataProps"))

(pi:define-message training-info-proto
    ()
  ;; Fields
  (initialization
   :index 1 :type graph-proto :kind :message :label (:optional) :json-name "initialization")
  (algorithm
   :index 2 :type graph-proto :kind :message :label (:optional) :json-name "algorithm")
  (initialization-binding
   :index 3 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "initializationBinding")
  (update-binding
   :index 4 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "updateBinding"))

(pi:define-message model-proto
    ()
  ;; Fields
  (ir-version
   :index 1 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "irVersion")
  (opset-import
   :index 8 :type operator-set-id-proto :kind :message :label (:repeated :list) :json-name "opsetImport")
  (producer-name
   :index 2 :type cl:string :kind :scalar :label (:optional) :json-name "producerName")
  (producer-version
   :index 3 :type cl:string :kind :scalar :label (:optional) :json-name "producerVersion")
  (domain
   :index 4 :type cl:string :kind :scalar :label (:optional) :json-name "domain")
  (model-version
   :index 5 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "modelVersion")
  (doc-string
   :index 6 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (graph
   :index 7 :type graph-proto :kind :message :label (:optional) :json-name "graph")
  (metadata-props
   :index 14 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "metadataProps")
  (training-info
   :index 20 :type training-info-proto :kind :message :label (:repeated :list) :json-name "trainingInfo")
  (functions
   :index 25 :type function-proto :kind :message :label (:repeated :list) :json-name "functions"))

(pi:define-message string-string-entry-proto
    ()
  ;; Fields
  (key
   :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "key")
  (value
   :index 2 :type cl:string :kind :scalar :label (:optional) :json-name "value"))

(pi:define-message tensor-annotation
    ()
  ;; Fields
  (tensor-name
   :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "tensorName")
  (quant-parameter-tensor-names
   :index 2 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "quantParameterTensorNames"))

(pi:define-message graph-proto
    ()
  ;; Fields
  (node
   :index 1 :type node-proto :kind :message :label (:repeated :list) :json-name "node")
  (name
   :index 2 :type cl:string :kind :scalar :label (:optional) :json-name "name")
  (initializer
   :index 5 :type tensor-proto :kind :message :label (:repeated :list) :json-name "initializer")
  (sparse-initializer
   :index 15 :type sparse-tensor-proto :kind :message :label (:repeated :list) :json-name "sparseInitializer")
  (doc-string
   :index 10 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (input
   :index 11 :type value-info-proto :kind :message :label (:repeated :list) :json-name "input")
  (output
   :index 12 :type value-info-proto :kind :message :label (:repeated :list) :json-name "output")
  (value-info
   :index 13 :type value-info-proto :kind :message :label (:repeated :list) :json-name "valueInfo")
  (quantization-annotation
   :index 14 :type tensor-annotation :kind :message :label (:repeated :list) :json-name "quantizationAnnotation")
  (metadata-props
   :index 16 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "metadataProps"))

(pi:define-message tensor-proto
    ()
  ;; Nested enums

  (pi:define-enum tensor-proto.data-type
      ()
    (:undefined :index 0)
    (:float :index 1)
    (:uint8 :index 2)
    (:int8 :index 3)
    (:uint16 :index 4)
    (:int16 :index 5)
    (:int32 :index 6)
    (:int64 :index 7)
    (:string :index 8)
    (:bool :index 9)
    (:float16 :index 10)
    (:double :index 11)
    (:uint32 :index 12)
    (:uint64 :index 13)
    (:complex64 :index 14)
    (:complex128 :index 15)
    (:bfloat16 :index 16)
    (:float8e4m3fn :index 17)
    (:float8e4m3fnuz :index 18)
    (:float8e5m2 :index 19)
    (:float8e5m2fnuz :index 20)
    (:uint4 :index 21)
    (:int4 :index 22))

  (pi:define-enum tensor-proto.data-location
      ()
    (:default :index 0)
    (:external :index 1))
  ;; Nested messages

  (pi:define-message tensor-proto.segment
      ()
    ;; Fields
    (begin
     :index 1 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "begin")
    (end
     :index 2 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "end"))
  ;; Fields
  (dims
   :index 1 :type cl-protobufs:int64 :kind :scalar :label (:repeated :list) :json-name "dims")
  (data-type
   :index 2 :type cl-protobufs:int32 :kind :scalar :label (:optional) :json-name "dataType")
  (segment
   :index 3 :type tensor-proto.segment :kind :message :label (:optional) :json-name "segment")
  (float-data
   :index 4 :type cl:float :kind :scalar :label (:repeated :list) :json-name "floatData" :packed cl:t)
  (int32-data
   :index 5 :type cl-protobufs:int32 :kind :scalar :label (:repeated :list) :json-name "int32Data" :packed cl:t)
  (string-data
   :index 6 :type cl-protobufs:byte-vector :kind :scalar :label (:repeated :list) :json-name "stringData")
  (int64-data
   :index 7 :type cl-protobufs:int64 :kind :scalar :label (:repeated :list) :json-name "int64Data" :packed cl:t)
  (name
   :index 8 :type cl:string :kind :scalar :label (:optional) :json-name "name")
  (doc-string
   :index 12 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (raw-data
   :index 9 :type cl-protobufs:byte-vector :kind :scalar :label (:optional) :json-name "rawData")
  (external-data
   :index 13 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "externalData")
  (data-location
   :index 14 :type tensor-proto.data-location :kind :enum :label (:optional) :json-name "dataLocation" :default :default)
  (double-data
   :index 10 :type cl:double-float :kind :scalar :label (:repeated :list) :json-name "doubleData" :packed cl:t)
  (uint64-data
   :index 11 :type cl-protobufs:uint64 :kind :scalar :label (:repeated :list) :json-name "uint64Data" :packed cl:t)
  (metadata-props
   :index 16 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "metadataProps"))

(pi:define-message sparse-tensor-proto
    ()
  ;; Fields
  (values
   :index 1 :type tensor-proto :kind :message :label (:optional) :json-name "values")
  (indices
   :index 2 :type tensor-proto :kind :message :label (:optional) :json-name "indices")
  (dims
   :index 3 :type cl-protobufs:int64 :kind :scalar :label (:repeated :list) :json-name "dims"))

(pi:define-message tensor-shape-proto
    ()
  ;; Nested messages

  (pi:define-message tensor-shape-proto.dimension
      ()
    ;; Fields
    (pi:define-oneof value ()
      (dim-value
       :index 1 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "dimValue")
      (dim-param
       :index 2 :type cl:string :kind :scalar :label (:optional) :json-name "dimParam"))
    (denotation
     :index 3 :type cl:string :kind :scalar :label (:optional) :json-name "denotation"))
  ;; Fields
  (dim
   :index 1 :type tensor-shape-proto.dimension :kind :message :label (:repeated :list) :json-name "dim"))

(pi:define-message type-proto
    ()
  ;; Nested messages

  (pi:define-message type-proto.tensor
      ()
    ;; Fields
    (elem-type
     :index 1 :type cl-protobufs:int32 :kind :scalar :label (:optional) :json-name "elemType")
    (shape
     :index 2 :type tensor-shape-proto :kind :message :label (:optional) :json-name "shape"))

  (pi:define-message type-proto.sequence
      ()
    ;; Fields
    (elem-type
     :index 1 :type type-proto :kind :message :label (:optional) :json-name "elemType"))

  (pi:define-message type-proto.map
      ()
    ;; Fields
    (key-type
     :index 1 :type cl-protobufs:int32 :kind :scalar :label (:optional) :json-name "keyType")
    (value-type
     :index 2 :type type-proto :kind :message :label (:optional) :json-name "valueType"))

  (pi:define-message type-proto.optional
      ()
    ;; Fields
    (elem-type
     :index 1 :type type-proto :kind :message :label (:optional) :json-name "elemType"))

  (pi:define-message type-proto.sparse-tensor
      ()
    ;; Fields
    (elem-type
     :index 1 :type cl-protobufs:int32 :kind :scalar :label (:optional) :json-name "elemType")
    (shape
     :index 2 :type tensor-shape-proto :kind :message :label (:optional) :json-name "shape"))
  ;; Fields
  (pi:define-oneof value ()
    (tensor-type
     :index 1 :type type-proto.tensor :kind :message :label (:optional) :json-name "tensorType")
    (sequence-type
     :index 4 :type type-proto.sequence :kind :message :label (:optional) :json-name "sequenceType")
    (map-type
     :index 5 :type type-proto.map :kind :message :label (:optional) :json-name "mapType")
    (optional-type
     :index 9 :type type-proto.optional :kind :message :label (:optional) :json-name "optionalType")
    (sparse-tensor-type
     :index 8 :type type-proto.sparse-tensor :kind :message :label (:optional) :json-name "sparseTensorType"))
  (denotation
   :index 6 :type cl:string :kind :scalar :label (:optional) :json-name "denotation"))

(pi:define-message operator-set-id-proto
    ()
  ;; Fields
  (domain
   :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "domain")
  (version
   :index 2 :type cl-protobufs:int64 :kind :scalar :label (:optional) :json-name "version"))

(pi:define-message function-proto
    ()
  ;; Fields
  (name
   :index 1 :type cl:string :kind :scalar :label (:optional) :json-name "name")
  (input
   :index 4 :type cl:string :kind :scalar :label (:repeated :list) :json-name "input")
  (output
   :index 5 :type cl:string :kind :scalar :label (:repeated :list) :json-name "output")
  (attribute
   :index 6 :type cl:string :kind :scalar :label (:repeated :list) :json-name "attribute")
  (attribute-proto
   :index 11 :type attribute-proto :kind :message :label (:repeated :list) :json-name "attributeProto")
  (node
   :index 7 :type node-proto :kind :message :label (:repeated :list) :json-name "node")
  (doc-string
   :index 8 :type cl:string :kind :scalar :label (:optional) :json-name "docString")
  (opset-import
   :index 9 :type operator-set-id-proto :kind :message :label (:repeated :list) :json-name "opsetImport")
  (domain
   :index 10 :type cl:string :kind :scalar :label (:optional) :json-name "domain")
  (overload
   :index 13 :type cl:string :kind :scalar :label (:optional) :json-name "overload")
  (value-info
   :index 12 :type value-info-proto :kind :message :label (:repeated :list) :json-name "valueInfo")
  (metadata-props
   :index 14 :type string-string-entry-proto :kind :message :label (:repeated :list) :json-name "metadataProps"))

(cl:eval-when (:compile-toplevel :load-toplevel :execute)
(pi:add-file-descriptor #P"onnx.proto" 'onnx)
)

(cl:export '(algorithm
             attribute
             attribute-proto
             attribute-proto.attribute-type
             attribute-proto.attribute-type-int-to-keyword
             attribute-proto.attribute-type-keyword-to-int
             begin
             data-location
             data-type
             denotation
             dim
             dim-param
             dim-value
             dims
             doc-string
             domain
             double-data
             elem-type
             end
             external-data
             f
             float-data
             floats
             function-proto
             functions
             g
             graph
             graph-proto
             graphs
             i
             indices
             initialization
             initialization-binding
             initializer
             input
             int32-data
             int64-data
             ints
             ir-version
             key
             key-type
             map-type
             metadata-props
             model-proto
             model-version
             name
             node
             node-proto
             onnx
             op-type
             operator-set-id-proto
             operator-status
             operator-status-int-to-keyword
             operator-status-keyword-to-int
             opset-import
             optional-type
             output
             overload
             producer-name
             producer-version
             quant-parameter-tensor-names
             quantization-annotation
             raw-data
             ref-attr-name
             s
             segment
             sequence-type
             shape
             sparse-initializer
             sparse-tensor
             sparse-tensor-proto
             sparse-tensor-type
             sparse-tensors
             string-data
             string-string-entry-proto
             strings
             t
             tensor-annotation
             tensor-name
             tensor-proto
             tensor-proto.data-location
             tensor-proto.data-location-int-to-keyword
             tensor-proto.data-location-keyword-to-int
             tensor-proto.data-type
             tensor-proto.data-type-int-to-keyword
             tensor-proto.data-type-keyword-to-int
             tensor-proto.segment
             tensor-shape-proto
             tensor-shape-proto.dimension
             tensor-type
             tensors
             tp
             training-info
             training-info-proto
             type
             type-proto
             type-proto.map
             type-proto.optional
             type-proto.sequence
             type-proto.sparse-tensor
             type-proto.tensor
             type-protos
             uint64-data
             update-binding
             value
             value-info
             value-info-proto
             value-type
             values
             version
             version-int-to-keyword
             version-keyword-to-int))
